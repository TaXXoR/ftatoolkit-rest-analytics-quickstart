{
	"name": "2_OpenAQ_Incremental_Load",
	"properties": {
		"activities": [
			{
				"name": "Update Start Date",
				"description": "Update table storage with new start date",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "CopyData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://@{pipeline().parameters.StorageAccountName}.table.core.windows.net/Jobs(PartitionKey='@{pipeline().parameters.LocationID}',RowKey='@{pipeline().parameters.LocationID}')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"method": "PUT",
					"headers": {
						"x-ms-version": "2017-11-09",
						"Accept": "application/json"
					},
					"body": {
						"value": "{\n   \"MaxDate\": \"@{variables('ToDate')}\"\n}",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://storage.azure.com/"
					}
				}
			},
			{
				"name": "Get Start Date",
				"description": "Retrieve start date for this round of incremental load from Table Storage",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureTableSource",
						"azureTableSourceQuery": {
							"value": "PartitionKey eq '@{pipeline().parameters.LocationID}' and RowKey eq '@{pipeline().parameters.LocationID}'",
							"type": "Expression"
						},
						"azureTableSourceIgnoreTableNotFound": false
					},
					"dataset": {
						"referenceName": "ETLJobsTable",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Set From Date",
				"description": "Set variable for window start date. If it doesn't exist, use the MinDate parameter",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Start Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FromDate",
					"value": {
						"value": "@coalesce(\n    activity('Get Start Date').output?.firstRow?.MaxDate, \n    pipeline().parameters.MinDate\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CopyData",
				"description": "Copy data in window from source to Data Lake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Cancel if loading past limit",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET",
							"requestTimeout": ""
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['meta']['name']"
								},
								"sink": {
									"name": "name",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['meta']['license']"
								},
								"sink": {
									"name": "license",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['meta']['website']"
								},
								"sink": {
									"name": "website",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['meta']['page']"
								},
								"sink": {
									"name": "page",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['meta']['limit']"
								},
								"sink": {
									"name": "limit",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['meta']['found']"
								},
								"sink": {
									"name": "found",
									"type": "Int64"
								}
							},
							{
								"source": {
									"path": "['locationId']"
								},
								"sink": {
									"name": "locationId",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "['location']"
								},
								"sink": {
									"name": "location",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['parameter']"
								},
								"sink": {
									"name": "parameter",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['value']"
								},
								"sink": {
									"name": "value",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "['date']['utc']"
								},
								"sink": {
									"name": "utc",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "['date']['local']"
								},
								"sink": {
									"name": "local",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "['unit']"
								},
								"sink": {
									"name": "unit",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['coordinates']['latitude']"
								},
								"sink": {
									"name": "latitude",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "['coordinates']['longitude']"
								},
								"sink": {
									"name": "longitude",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "['country']"
								},
								"sink": {
									"name": "country",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['city']"
								},
								"sink": {
									"name": "city",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['isMobile']"
								},
								"sink": {
									"name": "isMobile",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['isAnalysis']"
								},
								"sink": {
									"name": "isAnalysis",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['entity']"
								},
								"sink": {
									"name": "entity",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['sensorType']"
								},
								"sink": {
									"name": "sensorType",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['results']"
					}
				},
				"inputs": [
					{
						"referenceName": "OpenAQMeasurements",
						"type": "DatasetReference",
						"parameters": {
							"date_from": {
								"value": "@variables('FromDate')",
								"type": "Expression"
							},
							"date_to": {
								"value": "@variables('ToDate')",
								"type": "Expression"
							},
							"limit": 100000,
							"location_id": {
								"value": "@pipeline().parameters.LocationID",
								"type": "Expression"
							},
							"page": "1"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "OpenAQMeasurementsDatalake",
						"type": "DatasetReference",
						"parameters": {
							"manufacturer": {
								"value": "@pipeline().parameters.Manufacturer",
								"type": "Expression"
							},
							"locationID": {
								"value": "@pipeline().parameters.LocationID",
								"type": "Expression"
							},
							"year": {
								"value": "@formatDateTime(variables('FromDate'), 'yyyy')",
								"type": "Expression"
							},
							"month": {
								"value": "@formatDateTime(variables('FromDate'), 'MM')",
								"type": "Expression"
							},
							"day": {
								"value": "@formatDateTime(variables('FromDate'), 'dd')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Calculate To Date",
				"description": "Set variable for window end date by adding the time delta defined.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set From Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ToDate",
					"value": {
						"value": "@addToTime(\n    variables('FromDate'), \n    pipeline().parameters.DeltaMinutes,\n    'minute'\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Cancel if loading past limit",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Calculate To Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(\n    ticks(variables('ToDate')),\n    ticks(pipeline().parameters.MaxDate) \n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Cancel",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Targeted time window out of bounds",
								"errorCode": "400"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"LocationID": {
				"type": "string",
				"defaultValue": "232441"
			},
			"Manufacturer": {
				"type": "string",
				"defaultValue": "purpleair"
			},
			"MinDate": {
				"type": "string",
				"defaultValue": "2022-01-01"
			},
			"MaxDate": {
				"type": "string",
				"defaultValue": "2022-01-05"
			},
			"DeltaMinutes": {
				"type": "int",
				"defaultValue": 1440
			},
			"StorageAccountName": {
				"type": "string",
				"defaultValue": "raqstorage"
			},
			"TableName": {
				"type": "string",
				"defaultValue": "Jobs"
			}
		},
		"variables": {
			"FromDate": {
				"type": "String"
			},
			"ToDate": {
				"type": "String"
			},
			"fii": {
				"type": "String"
			}
		},
		"folder": {
			"name": "OpenAQ"
		},
		"annotations": [],
		"lastPublishTime": "2022-12-26T15:00:28Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}